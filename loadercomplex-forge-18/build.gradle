buildscript {
	repositories {
		maven { url = 'https://maven.minecraftforge.net' }
		maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

group = maven_group
version = rootProject.version
archivesBaseName = archives_base_name

java {
	toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
	mappings channel: 'official', version: '1.18.2'

	// accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

	runs {
		client {
			workingDirectory rootProject.file('run')

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				loadercomplex {
					source sourceSets.main
				}
			}
		}

		server {
			workingDirectory rootProject.file('run')

			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				loadercomplex {
					source sourceSets.main
				}
			}
		}
	}
}

//mixin {
//	add sourceSets.main, 'loadercomplex-forge18.refmap.json'
//
//	config 'loadercomplex-forge18.mixins.json'
//}

// Include resources generated by data generators.
//sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
	minecraft 'net.minecraftforge:forge:1.18.2-40.0.45'

	// Real mod deobf dependency examples - these get remapped to your current mappings
	// compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
	// runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
	// implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

	// Examples using mod jars from ./libs
	// implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

	annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.withType(JavaCompile).configureEach {
	it.sourceCompatibility = 17 // for the IDE support
	it.options.encoding = 'UTF-8'
	it.options.release.set(17)
}

jar.finalizedBy('reobfJar')

afterEvaluate {
	artifacts {
		jarz file( "$buildDir/reobfJar/output.jar" )
	}
}
